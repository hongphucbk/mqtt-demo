<% layout('../layout/index') %>

<style type="text/css">
  .circle {
    width: 80px;
    height: 80px;
    -webkit-border-radius: 40px;
    -moz-border-radius: 40px;
    border-radius: 40px;
    background: gray;
    
  }
  .card{
  	border-radius: 10px;
  }

 	.off{
 		background: gray;
 	}
 	.on{
 		background: green;
 	}

 	.err{
 		background: red;
 	}

</style>


<div class="panel-heading">
	Smart home
	<span style="float: right;"><a href="/">Home</a></span>
</div>
<div class="panel-body">
	<div class="col-md-3" >
		<div class="card" style="background-color: #e3f0fe; min-height: 110px; padding-top: 10px">

			<div class="col-md-4">
		  	<div class="left circle" id="1"></div>
		  </div>
		  <div class="col-md-8" style="text-align: center;">
		  	<h3 style="margin-top: 5px; color: rgb(46,21,162); font-family: Helvetica">ĐÈN LED</h3>
		  </div>

		  <div class="col-md-8" style="text-align: center;">

		  	<button type="button" class="btn btn-success .btn-lg" 
                    data-toggle="modal"       
                    data-target="#confirmModal" 
                    data-id="1"
                    data-topic="cmnd/sonoff/POWER"
                    data-name="Light 1"
                    data-value="ON"
                    ><i class="fa fa-power-off" aria-hidden="true"></i> ON</button>
        <button type="button" class="btn btn-secondary .btn-lg" 
                    data-toggle="modal"       
                    data-target="#confirmModal" 
                    data-id="1"
                    data-topic="cmnd/sonoff/POWER"
                    data-name="Light 1"
                    data-value="OFF"
                    ><i class="fa fa-power-off" aria-hidden="true"></i> OFF</button>
		  </div>
		  <div class="col-md-12" id="info-1" style="color: red; font-size: 10px; text-align: right;"></div>
		</div>
	</div>
  <!-- Modal 1 -->
  <div class="modal fade" id="confirmModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Infomation Confirm</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Cancel">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <div class="form-body">
             Bạn chắc chắn <span id="value" style="color: blue"></span> đèn <span id="name" style="color: blue"></span>.
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
          <!-- <button type="button" class="btn btn-primary">Save changes</button> -->
          <button type="button" class="btn btn-primary" id="write_data_button" 
              data-send = "" data-dismiss="modal" >OK</button>
        </div>
      </div>
    </div>
  </div>
	<!-- End modal 1 -->
	
</div>
<script>
	var now = new Date();
    // var socket = io("http://localhost:3001");
    // socket.emit('thongbao','hello');
    // socket.on('data', function(msg){
    //   	// document.getElementById("Uab").innerHTML = msg.Uab ;
    //   	// document.getElementById("Ubc").innerHTML = msg.Ubc ;
    //   	// document.getElementById("Uca").innerHTML = msg.Uca ;
    //   	// document.getElementById("Iab").innerHTML = msg.Iab ;
    //   	// document.getElementById("Ibc").innerHTML = msg.Ibc ;
    //   	// document.getElementById("Ica").innerHTML = msg.Ica ;
    //   	// document.getElementById("Cosphi").innerHTML = msg.Cosphi ;
    //   	// document.getElementById("Hz").innerHTML = msg.Hz ;
    //   	// document.getElementById("Kwh_Day").innerHTML = msg.Kwh_Day ;
    //   	// document.getElementById("Kwh_Total").innerHTML = msg.Kwh_Total ;
    //   	// document.getElementById("Timestamp").innerHTML = formatDate(new Date());
    //   	// console.log(msg);
    //   	// gauge.set(msg.Uab);
    //   	// document.getElementById("preview-textfield").innerHTML = msg.Uab + " V";

    // });


    function formatDate(date) {
	  let monthNames = [
	    "January", "February", "March",
	    "April", "May", "June", "July",
	    "August", "September", "October",
	    "November", "December"
	  ];

	  var day = date.getDate();
	  var monthIndex = date.getMonth();
	  var year = date.getFullYear();
	  var hour = date.getHours();
	  var minute = date.getMinutes();
	  var second = date.getSeconds();

	  return day + ' ' + monthNames[monthIndex] + ' ' + year + ' ' + hour + ':' + minute +  ':' +second;
	}
</script>
<!-- <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script> -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>

<script type="text/javascript">
	let topic;
	let value;
	$('#confirmModal').on('show.bs.modal', function(e) {
		//console.log("hihi");
      var button = $(e.relatedTarget);
      let id = button.data('id');
      let name = button.data('name');
      value = button.data('value');
      topic = button.data('topic');
      $('#name').attr("value", name);
      $('#id').attr("id", id);
      $('#value').attr("value", value);
      //Gán giá trị vào pop-up
      document.getElementById("name").innerHTML = name;
      document.getElementById("value").innerHTML = value;
      
      // var data_send = name + ":" + value;
      // var data_send_2 = value;
      // console.log("Da gan vao data-send: " + data_send_2);
      // $('#write_data_button').attr("data-send", data_send_2);
    });

	$("#write_data_button").click(function() {
        var datasend = value;
        client.publish(topic, datasend);
        
        //console.log("Da pub topic " + topic + ", value = " + value);
    });

</script>

<!-- MQTT -->
<script> 
	var connected;
  var client = mqtt.connect('http://localhost:3002');
  	
  //client.subscribe("mqtt/write");

  client.on("message", function(topic, payload) {
  	if (topic == 'stat/sonoff/RESULT') {
  		let data = JSON.parse(payload);
  		let power = data.POWER;
	    if (power == 'ON') {
	    	$("#1").removeClass("err");
	    	$("#1").removeClass("off");
	    	$("#1").addClass("on");
	    }
	    if (power == 'OFF') { 
	    	$("#1").removeClass("err");
	    	$("#1").removeClass("on");
	    	$("#1").addClass("off");
	    }

	    let wifi = data.Wifi;
	    if (wifi && connected) {
	    	//console.log(data.Wifi.SSId)
	    	document.getElementById("info-1").innerHTML = 'Connected. Wifi: ' +  data.Wifi.SSId;
	    	
	    }else{
	    	
	    }
	    
	    // if ( != undefined) {
	    // 	console.log( data.Wifi.SSId )
	    // }
  	}
  	if (topic == 'stat/sonoff/STATUS') {
  		let data= JSON.parse(payload); //JSON
  		let power = data.Status.Power;
  		if (power == 1) { 
  			$("#1").removeClass("err");
	    	$("#1").removeClass("off");
	    	$("#1").addClass("on");
	    }
	    if (power == 0) { 
	    	$("#1").removeClass("err");
	    	$("#1").removeClass("on");
	    	$("#1").addClass("off");

	    }

  		// console.log("status: " + JSON.parse(payload))
  		// console.log("status: " + b.Status.Power)
  	}
  	// Check connect status
  	if (topic == 'status/sonoff/connect') {
  		let data= (payload.toString()); //JSON
  		if (data == '1') {
  			connected = 1
  			console.log(connected)
  		}else{
  			connected = 0
  			console.log(connected)
  			document.getElementById("info-1").innerHTML = 'Not connect';
  			$("#1").removeClass("on");
  			$("#1").removeClass("off");
	    	$("#1").addClass("err");
  		}
	    
  	}

  	


  });

	client.on('connect', function () {
		console.log("MQTT Client connected successfully");
	  client.subscribe('stat/sonoff/RESULT', function (err) {
	    if (!err) {
	      client.publish('cmnd/sonoff/STATE')
	    }
	  });
	  client.subscribe('tele/sonoff/INFO2', function (err) {
	    if (!err) {
	      //client.publish('mqtt/write', 'Hello mqtt')
	    }
	  });

	  client.subscribe('stat/sonoff/STATUS', function (err) {
	    if (!err) {
	      client.publish('cmnd/sonoff/status')

	    }
	  });

	  client.subscribe('status/sonoff/connect', function (err) {
	    if (!err) {
	      

	    }
	  });

	  myFunction()

	  function myFunction() {
		  setInterval(function(){
		  	client.publish('cmnd/sonoff/STATE')
		  }, 1000);
		}


	  

	})
</script>

