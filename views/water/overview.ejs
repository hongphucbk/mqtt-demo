<% layout('../layout/index') %>

<link href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.12.1/jquery-ui.css" rel="stylesheet" id="bootstrap-css">
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="/js/d3.v3.min.js"></script>
<!-- Chart -->
<link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.min.css">
<!-- Datatable -->
<link href="//cdn.datatables.net/1.10.20/css/jquery.dataTables.min.css" rel="stylesheet">
<link href="/css/process-water.css" rel="stylesheet">

<style>
    .display_value{
      style="font-size: 24px; text-align: center;"
    }

    .cl_blue{
      color: blue;
    }

    table.dataTable tbody th, table.dataTable tbody td{
      padding: 0px 0px !important;
    }
</style>

<div class="panel-heading">
	All water stations
	<span style="float: right;"><a href="/water/add">Add new station</a></span>
</div>
<div class="panel-body">
<div class="container">
	<div class="row">
		<div class="col-sm-6 col-md-3">
			<h3 style="text-align: center;">BỒN 1</h3>
			<svg id="fillgauge1" width="97%" height="200"></svg>

		</div>
		<div class="col-sm-6 col-md-3">
			<h3 style="text-align: center;">BỒN 2</h3>
			<svg id="fillgauge2" width="97%" height="200"></svg>
		</div>
	  <div class="col-md-6">
		  <canvas id="myChart" width="600px" height="300px"></canvas> 
		</div>
		<div class="col-md-12">
		  <div class="col-md-12">
		  	
			</div>
			<div class="col-md-6">
			</div>
		</div>
	</div>
       
  </div>

  <div class="row">
    <div class="col-md-7">
      <table id="example" class="display" style="width:100%">
        <thead>
            <tr>
                <th>Time</th>
                <th>Name</th>
                <th>Value</th>
                <th>Status</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
          <% waters.forEach(function(water) { %>
            <tr>
                <td><%= moment(water.timestamp).format('DD-MM-YYYY HH:mm:ss') %></td>
                <td>Bồn <%= water.name %></td>
                <td><%= water.data.toFixed(2) %></td>
                <td>
                  <%if (water.data > 80) { %>
                    <span class="label label-danger">Hight</span>
                  <%}else{%>
                    <span class="label label-warning">Low</span>
                  <% } %>

                  <%if (water.acknowleadge == 1) { %>
                    <span class="label label-success">Acknowleadged</span>
                  <% } %>
                </td>  
                <td>
                  <%if (((water.data > 80) || (water.data < 20)) &  (water.acknowleadge != 1)){ %>
                    <span class="label label-info">Please check !!</span>
                    <a href="/water/acknowleadge/<%= water.id %>"><span class="label label-info">Acknowleadge</span> </a>
                  <%}else{%>
                    <!-- <span class="label label-success">Good</span></td> -->
                  <% } %>
                </td>
            </tr>
          <% }); %>
            
        </tbody>
        <!-- <tfoot>
            <tr>
                <th>Name</th>
                <th>Position</th>
                <th>Office</th>
                <th>Age</th>
                <th>Start date</th>
                <th>Salary</th>
            </tr>
        </tfoot> -->
      </table>
    </div>    
    <!-- <div class="col-md-1">
    </div> -->
    <div class="col-md-2" style="margin-top: 5%">
      <p style="text-align: center;">ALARM</p>
      <div class="progress-pie-chart" data-percent="<%= percentAlarm %>" style="margin-top: 0 !important"><!--Pie Chart -->
        <div class="ppc-progress">
            <div class="ppc-progress-fill"></div>
        </div>
        <div class="ppc-percents">
          <div class="pcc-percents-wrapper">
              <span>%</span>
          </div>
        </div>
      </div><!--End Chart -->

    </div>
    <div class="col-md-3" style="margin-top: 5%"> 
      <p style="text-align: center;">INSTRUCTION</p>
      <span class="label label-danger">Hight</span> Mức nước > 80 <br>
                  
      <span class="label label-warning">Low</span> Mức nước < 20

    </div>
  </div>
</div>





<!-- Get init data -->
<script type="text/javascript">
	var objData1 = [];
	var objData2 = [];
	var datalabel1 = [];
	let temp1 = "";
	<% oldWaters1.forEach(function(water) { %>
		var dataOld1 = <%= water.data %>
		objData1.push(dataOld1);
	  temp1 = "<%= moment(water.timestamp).format('HH:mm:ss') %>"
    datalabel1.push(temp1)
    
  <% }); %>
  <% oldWaters2.forEach(function(water) { %>
		var dataOld2 = <%= water.data %>
		objData2.push(dataOld2);
  <% }); %>
  datalabel1 = datalabel1.reverse();
  var level1;
  var level2;
	level1 = objData1[0]; 
	level2 = objData2[0];
  objData1 = objData1.reverse();
  objData2 = objData2.reverse();
  // console.log('data1 = ' + typeof(data1))
</script>

<!-- datatable -->
<script type="text/javascript">
  var t;
  var counter = 1
  $(document).ready(function() {
    t = $('#example').DataTable();
    t.order( [ 0, 'desc' ] ).draw();
  });

  function addData(station, name, value){
    let date1 = moment.utc().format();
    let date = moment.utc(date1).local().format();

    let t1;
    if (value >= 80) {
      status = '<span class="label label-danger">Hight</span>'            
    }else{
      status = '<span class="label label-warning">Low</span>'                
    }



      t.row.add([
            formatDateFull(date),
            name,
            value,
            status,
            ''
        ] ).draw( false );
      t.order( [ 0, 'desc' ] )
      .draw();
    }
</script>


<!-- Gause -->
<script type="text/javascript">
	var config1 = liquidFillGaugeDefaultSettings();
  config1.displayPercent = false;
  var gauge1 = loadLiquidFillGauge("fillgauge1", level1, config1);
  

  var config2 = liquidFillGaugeDefaultSettings();
  config2.displayPercent = false;
  var gauge2 = loadLiquidFillGauge("fillgauge2", level2, config2);    
  
  function NewValue(){
      if(Math.random() > .5){
          return Math.round(Math.random()*100);
      } else {
          return (Math.random()*100).toFixed(1);
      }
  }
</script>

<!-- Chart Date time  -->
<script type="text/javascript">
  var now = Date.now()
  //console.log(now);
  var next = new Date(now + (1000));
  //console.log(next);

  function formatDate(date) {
    var day = date.getDate();
    var monthIndex = date.getMonth();
    var year = date.getFullYear();
    var hour = date.getHours();
    var minute = date.getMinutes();
    var second = date.getSeconds();
    return hour + ':' + minute +  ':' +second;
  }

  function formatFullDateTime(date) {
    var day = date.getDate();
    var monthIndex = date.getMonth() + 1;
    var year = date.getFullYear();
    var hour = date.getHours();
    var minute = date.getMinutes();
    var second = date.getSeconds();
    return day + "-" + monthIndex + "-"+ year + " " + hour + ':' + minute +  ':' +second;
  }

  function formatDateFull(date2){
    
    // let date1 = moment.utc().format();
    // let date = moment.utc().local().format('DD-MM-YYYY HH:mm:ss');
    // console.log('date ' + date)
    // let date1 = new Date();
    // moment.locale('vi');
    // console.log('date ' + date1)

    // var date = moment.utc().format();
    // console.log(date, "- now in UTC"); 

    // var local = moment.utc(date).local().format();
    // console.log(local, "- UTC now to local"); 

    var dt = new Date();
    //dt.setHours( dt.getHours() + 7 );
    //return local;
    return moment(dt).format('DD-MM-YYYY HH:mm:ss');
  }
</script>
      
<!-- Socket IO -->
<script type="text/javascript">
  //let socket = io("http://localhost:3001");
  let socket = io("http://124.158.10.133:3001");
  socket.emit('thongbao','hello');
  socket.on('level1', function(msg){
    	// document.getElementById("Uab").innerHTML = msg.Uab ;
    	// document.getElementById("Ubc").innerHTML = msg.Ubc ;
    	// document.getElementById("Uca").innerHTML = msg.Uca ;
    	// document.getElementById("Iab").innerHTML = msg.Iab ;
    	// document.getElementById("Ibc").innerHTML = msg.Ibc ;
    	// document.getElementById("Ica").innerHTML = msg.Ica ;
    	// document.getElementById("Cosphi").innerHTML = msg.Cosphi ;
    	// document.getElementById("Hz").innerHTML = msg.Hz ;
    	// document.getElementById("Kwh_Day").innerHTML = msg.Kwh_Day ;
    	// document.getElementById("Kwh_Total").innerHTML = msg.Kwh_Total ;
    	// document.getElementById("Timestamp").innerHTML = formatDate(new Date());
    	//console.log(msg);
    	level1 = msg;
    	//gauge1.set(msg);
    	gauge1.update(msg);
    	// document.getElementById("preview-textfield").innerHTML = msg.Uab + " V";
      if (level1 < 20 || level1 > 80) {
        addData("1", 'Bồn 1', level1);
      }

  });
  socket.on('level2', function(msg){
  		level2 = msg;
    	gauge2.update(msg);
      if (level2 < 20 || level2 > 80) {
        addData("1", 'Bồn 2', level2);
      }
  });
</script>

<!-- Chart -->
<script type="text/javascript">
  $(document).ready(function() {
  var ctx = document.getElementById("myChart").getContext("2d");

  var data = {
    labels: datalabel1,
    datasets: [{
      label: "My First dataset",
      fillColor: "rgba(220,220,220,0.4)",
      strokeColor: "rgba(247, 235, 0,1)",
      pointColor: "rgba(220,220,220,1)",
      pointStrokeColor: "#fff",
      pointHighlightFill: "#fff",
      pointHighlightStroke: "rgba(220,220,220,1)",
      data: objData1
    }, {
      label: "My Second dataset",
      fillColor: "rgba(151,187,205,0.2)",
      strokeColor: "rgba(255, 0, 30,1)",
      pointColor: "rgba(151,187,205,1)",
      pointStrokeColor: "#fff",
      pointHighlightFill: "#fff",
      pointHighlightStroke: "rgba(151,187,205,1)",
      data: objData2
    }]
  };
  var options = {
    animation: false,
    //Boolean - If we want to override with a hard coded scale
    scaleOverride: false,
    //** Required if scaleOverride is true **
    //Number - The number of steps in a hard coded scale
    scaleSteps: 1,
    //Number - The value jump in the hard coded scale
    scaleStepWidth: 1,
    //Number - The scale starting value
    scaleStartValue: 0,

    legend: {
            display: true,
            labels: {
                fontColor: 'rgb(255, 99, 132)'
            }
          },
    title: {
            display: true,
            text: 'Custom Chart Title'
        },
    scales: {
            yAxes: [{
                ticks: {
                    suggestedMin: 0,
                    suggestedMax: 100
                }
            }]
        }
  };

  var myLineChart = new Chart(ctx).Line(data, options);
  setInterval(function() {
    setData1(data.datasets[0].data);
    setData2(data.datasets[1].data);
    setLabels(data.labels);

    var myLineChart = new Chart(ctx).Line(data, options);
  }, 1000);

  function setLabels(labels) {
    next.setSeconds(next.getSeconds() + 1);
    var nextMonthName = formatDate(next);
    var strLb = nextMonthName.toString();
    labels.push(strLb);
    labels.shift();
    //console.log(labels)
  }

  function setData1(data) {
    data.push(level1);
    data.shift();
  }

  function setData2(data) {
    //data.push(Math.floor(Math.random() * 1) + 20);
    
    //data.push(Math.random() * 2 + 20);
    //nsole.log(data1.toFixed(2));
    data.push(level2);
    data.shift();
  }

});
</script>

<!-- process pie -->
<script type="text/javascript">
  $(function(){
      var $ppc = $('.progress-pie-chart'),
        percent = parseInt($ppc.data('percent')),
        deg = 360*percent/100;
      if (percent > 50) {
        $ppc.addClass('gt-50');
      }
      $('.ppc-progress-fill').css('transform','rotate('+ deg +'deg)');
      $('.ppc-percents span').html(percent+'%');
  });

  
   
</script>

